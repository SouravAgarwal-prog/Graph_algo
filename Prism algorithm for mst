#include<iostream>
#include<vector>
#include<unordered_map>
#include<list>
#include<queue>

using namespace std;
#define INT_MAX 2147483647
int sum=0;

class Graph {
public:
    unordered_map<int, list<pair<int,int>>> adjlist;  
    unordered_map<int,int>key;
    unordered_map<int,bool>mst;
    unordered_map<int,int>parent;

    void addEdge(int u, int v,int wt) {
        adjlist[u].push_back({v,wt});
        adjlist[v].push_back({u,wt});
    }
    

    void print() {
        for (auto x : adjlist) {
            cout << x.first << "->";
            for (auto y : adjlist[x.first]) {
                cout << "{" << y.first <<","<<y.second<< "}" << ",";
            }
            cout << endl;
        }
    }

    void prism(int src){
        
        for(auto x:adjlist){
            key[x.first]=INT_MAX;
            mst[x.first]=false;
            parent[x.first]=-1;
        }
        key[src]=0;
        
        priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> pq;
        pq.push({0,src});
        while(!pq.empty()){
            auto x=pq.top();
            int keyx=x.first;
            int node=x.second;
            pq.pop();
            mst[node]=true;
            for(auto nbr:adjlist[node]){
                int neighour=nbr.first;
                int w=nbr.second;
                if(!mst[neighour] && w<key[neighour]){
                    key[neighour]=w;
                    parent[neighour]=node;
                    pq.push({key[neighour], neighour});
                }
            }
        }
        cout << "Edge Weight" << endl;
        for (auto& node : adjlist) {
            int v = node.first;
            if (parent[v] != -1) {
                cout << parent[v] << " - " << v <<" "<< key[v] << endl;
                sum+=key[v];
            }
        }

    }

    
};

int main() {
    Graph g;

    
    g.addEdge(0, 1, 2);
    g.addEdge(0, 3, 6);
    g.addEdge(1, 2, 3);
    g.addEdge(1, 3, 8);
    g.addEdge(1, 4, 5);
    g.addEdge(2, 4, 7);

    int start = 0;
    g.prism(0);
    cout<<"total path length from prism is:-"<<sum<<endl;

   
    

    return 0;
}
